<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\app\components\so-club-edit\so-club-edit.ts" />
    <None Remove="ClientApp\app\components\so-clubs-list\so-clubs-list.component.ts" />
    <None Remove="ClientApp\app\components\so-create-club-dialog\so-create-club-dialog.ts" />
    <None Remove="ClientApp\app\components\so-header\so-header.component.ts" />
    <None Remove="ClientApp\app\components\so-login-dialog.ts" />
    <None Remove="ClientApp\app\components\so-membership-request-dialog\so-membership-request-dialog.ts" />
    <None Remove="ClientApp\app\components\so-menu-item\so-menu-item.component.ts" />
    <None Remove="ClientApp\app\components\so-menu\so-menu.component.ts" />
    <None Remove="ClientApp\app\components\so-menu\so-menu.service.ts" />
    <None Remove="ClientApp\app\components\so-messages\so-messages.ts" />
    <None Remove="ClientApp\app\components\so-protocol\so-protocol.ts" />
    <None Remove="ClientApp\app\components\so-sidebar\so-sidebar.component.ts" />
    <None Remove="ClientApp\app\components\so-user-profile\so-user-profile.component.ts" />
    <None Remove="ClientApp\app\configuration\constants.ts" />
    <None Remove="ClientApp\app\configuration\menu-list.ts" />
    <None Remove="ClientApp\app\dto\club.ts" />
    <None Remove="ClientApp\app\dto\common.ts" />
    <None Remove="ClientApp\app\dto\dto.ts" />
    <None Remove="ClientApp\app\dto\innerMessage.ts" />
    <None Remove="ClientApp\app\dto\protocol.ts" />
    <None Remove="ClientApp\app\dto\user.ts" />
    <None Remove="ClientApp\app\pipes\string-pipes.ts" />
    <None Remove="ClientApp\app\services\auth.ts" />
    <None Remove="ClientApp\app\services\authGuard.ts" />
    <None Remove="ClientApp\app\services\context.ts" />
    <None Remove="ClientApp\app\services\context\clubsApi.ts" />
    <None Remove="ClientApp\app\services\context\commonApi.ts" />
    <None Remove="ClientApp\app\services\context\innerMessageApi.ts" />
    <None Remove="ClientApp\app\services\context\userApi.ts" />
    <None Remove="ClientApp\app\services\datatable.service.ts" />
    <None Remove="ClientApp\app\services\global.state.ts" />
    <None Remove="ClientApp\app\services\helpers.ts" />
    <None Remove="ClientApp\app\services\httpInterceptor.ts" />
    <None Remove="ClientApp\app\services\snack.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\components\so-add-club-member\so-add-club-member.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-club-edit\so-club-edit.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-clubs-list\so-clubs-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-create-club-dialog\so-create-club-dialog.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-header\so-header.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-login-dialog\so-login-dialog.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-membership-request-dialog\so-membership-request-dialog.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-menu-item\so-menu-item.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-menu\so-menu.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-menu\so-menu.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-messages\so-messages.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-protocol\so-protocol.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-sidebar\so-sidebar.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\so-user-profile\so-user-profile.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\configuration\constants.ts" />
    <TypeScriptCompile Include="ClientApp\app\configuration\menu-list.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\club.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\common.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\dto.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\innerMessage.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\protocol.ts" />
    <TypeScriptCompile Include="ClientApp\app\dto\user.ts" />
    <TypeScriptCompile Include="ClientApp\app\pipes\string-pipes.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\auth.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\authGuard.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\context\clubsApi.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\context\commonApi.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\context\context.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\context\innerMessageApi.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\context\userApi.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\datatable.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\global.state.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\helpers.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\httpInterceptor.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\snack.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\services\validators.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\app\assets\" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>